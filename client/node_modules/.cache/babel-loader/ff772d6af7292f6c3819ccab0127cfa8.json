{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions.js';\nimport ShopActionTypes from './shop.types.js';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } //collectionRef.get().then(snapshot => {\n  //const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //dispatch(fetchCollectionsSuccess(collectionsMap));\n  //}).catch (err => dispatch(fetchCollectionsFailure(err.message)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/jonathanpalacio/Desktop/side-projects/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,QAAoC,oBAApC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,kCAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,mBAHP;AAKA,OAAOC,eAAP,MAA4B,iBAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BG,+BAD+B,EAE/BO,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GAXsC,CAavC;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,UAAU,CACdO,eAAe,CAACU,uBADF,EAEdT,qBAFc,CAAhB;AAID","sourcesContent":["import {takeLatest, call, put} from 'redux-saga/effects';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils.js';\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from './shop.actions.js';\n\nimport ShopActionTypes from './shop.types.js';\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot,\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n\n  //collectionRef.get().then(snapshot => {\n  //const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //dispatch(fetchCollectionsSuccess(collectionsMap));\n  //}).catch (err => dispatch(fetchCollectionsFailure(err.message)))\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync,\n  );\n}\n"]},"metadata":{},"sourceType":"module"}